\documentclass[a4paper, 10pt]{article}[5.10.2011]

%% packages
\usepackage[left=2cm, text={17cm, 24cm}, top=3cm]{geometry}		% rozmery stránky
\usepackage[czech]{babel}
\usepackage[latin2]{inputenc}
\usepackage[IL2]{fontenc}
\usepackage{colortbl}
\usepackage{graphicx}
\newcommand{\czuv}[1]{\quotedblbase #1\textquotedblleft}
\definecolor{gray}{rgb}{0.4,0.4,0.4}


% =======================================================================
% balíèek "hyperref" vytváøí klikací odkazy v pdf, pokud tedy pou¾ijeme pdflatex
% problém je, ¾e balíèek hyperref musí být uveden jako poslední, tak¾e nemù¾e
% být v ¹ablonì

  \usepackage{color}
  \usepackage[unicode,colorlinks,hyperindex,plainpages=false,pdftex]{hyperref}
  \definecolor{links}{rgb}{0.4,0.5,0}
  \definecolor{anchors}{rgb}{1,0,0}
  \def\AnchorColor{anchors}
  \def\LinkColor{links}
  \def\pdfBorderAttrs{/Border [0 0 0] }  % bez okrajù kolem odkazù
  \pdfcompresslevel=9

\title{Paralelní a distribuované algoritmy\,--\,dokumentace \\Paralelní celulární automat}
\author{Bc. Jaroslav Sendler, xsendl00\\ xsendl00@stud.fit.vutbr.cz}
\date{\today}

\begin{document}
\maketitle

\noindent Dokumentace k 2.projektu do pøedmìtu Paralelní a distribuované algoritmy (PRL). Obsahuje popis zadání, rozbor a analýzu Paralelního celulárního automatu. V závìru dokumentu se nachází komunikaèní protokol mezi \czuv{procesory} (zpùsob zasílání zpráv). Pro vizualizaci je vyu¾it sekvenèní diagram.
\section{Zadání}
Pomocí knihovny Open MPI implementujte celulární automat, který bude vyu¾ívat paralelního prostøedí pro urychlení výpoètu. Celulární automat bude implementovat pravidla hry \textit{Game of life}.
\begin{description}
 \item[Vstup:] Soubor \czuv{lattice} reprezentující møí¾ku automatu a obsahující binární èíslice {0,1}, kde 0 znamená mrtvou a 1 znamená ¾ivou buòku. Èíslice 0 a 1 budou uspoøádány do obdélníkové matice, kde ka¾dý øádek bude zpracováván právì jedním procesorem (navíc mù¾ete pou¾ít jeden øídící/synchronizaèní procesor). Zároveò mù¾ete poèítat s tím, ¾e v¹echny øádky jsou stejnì dlouhé. Následuje pøíklad, jak vypadá soubor \textit{lattice}.
 Pøíkladem budi¾:
\begin{verbatim}
00000000
00111000
01110000
00000000
\end{verbatim}
 \item[Výstup:] Na standardní výstup vypi¹te stav matice po po¾adovaném poètu krokù a to tak, ¾e ka¾dému øádku bude pøedcházet id procesoru a dvojteèka. Tento formát je zvolen z toho dùvodu, ¾e procesory budou hodnoty vypisovat v náhodném poøadí (pro seøazení výstupu pou¾ijte utilitu \textit{sort} ve spou¹tìcím skriptu, nezapomeòte vyøe¹it dvoumístná id procesorù) Pøesný formát výstupu je opìt nutno dodr¾et kvùli strojové kontrole výstupu. Za nedodr¾ení budou strhávány body. 
 Pøíklad výstupu po 3 krocích:
\begin{verbatim}
0:00010000
1:01001000
2:01001000
3:00100000
\end{verbatim}
\end{description}
\begin{description}
 \item[Postup:] Vytvoøte testovací skript se jménem \textit{test} nebo \textit{test.sh}. Skript pøijímá právì jeden parametr a to poèet krokù. Skript spoète poèet øádkù (aby bylo jasné, kolik je tøeba procesorù), pøelo¾í a spustí program s parametrem \textit{pocet\_kroku}. Je vhodné spoèíst i poèet sloupcù a pøedat ho programu kvùli naèítání souboru (ka¾dý procesor si pak mù¾e naèíst vlastní èást souboru hodnot - vlastní øádek). Po naètení (ideálnì paralelnì - ka¾dý procesor svùj øádek) hodnot je proveden zadaný poèet iterací podle pøedaného parametru a nakonec jsou na standardní výstup vypsány øádky jednotlivých procesorù. Vzhledem k tomu, ¾e pou¾ijete utilitu \textit{sort}, øádky budou seøazeny správnì, jak mají být v matici.
\end{description}

\section{Rozbor a analýza algoritmu}
Algoritmus pracuje s celulárním automate, který implementuje pravidla hry Game of life. Hra pracuje s matici o rozmìrech \textit{N x M}, kde \textit{N} je poèet øádkù a \textit{M} poèet sloupcù. Poèet procesorù, které se podílejí na zpracování hry je urèen na základì  promìnné \textit{N} ($N >= 1$). Tedy ka¾dý øádek je zpracováván jiným CPU. 
\begin{description}
 \item[Základní body algoritmu:]
\begin{itemize}
 \item
 \item Ka¾dý procesor uchovává jeden øádek hracího pole.
 \item V¹echny procesory pracují zároveò.
 \item Ka¾dý procesor posílá svùj øádek vedlej¹ímu procesoru.
 \item Ka¾dý procesor pøijímá øádek od vedlej¹ího procesoru.
 \item V¹echny procesory startují i konèí po stejném kroku.
 \item Celý algoritmus skonèí po K krocích.
\end{itemize}
\end{description}

\subsection*{Rozbor algoritmu}
Ka¾dý procesor obsahuje dvì fronty s maximální délkou \textit{M}, kde \textit{M} je délka hracího pole ($M >= 1$). První fronta obsahuje aktuálnì zpracovávaný øádek a druhá slou¾í pro ukládání ji¾ vypoètených nových hodnot jednotlivých bunìk. Pro pøíjem øádku od spodního/vrchního souseda slou¾í dal¹í jedna/dvì pole.

Implementace pravidel hry je rozdìleno do nìkolika následujících èástí:
\begin{itemize}
 \item Prní procesor (1) a poslední procesor (N)
  \begin{itemize}
   \item po¹le øádek \textit{[konstantní èas]}
   \item pøijme øádek \textit{[konstantní èas]}
   \item zpracování první buòky (3-okolí) \textit{[promìnný èas]}
   \item zpracování poslední buòky (3-okolí) \textit{[promìnný èas]}
   \item zpracování zbylých bunìk (5-okolí)
   \begin{itemize}
    \item loop(M-2) zpracuj buòku \textit{[promìnný èas]}
   \end{itemize}
  \end{itemize}
 \item Zbylé procesory (2-(N-1)-tý)
  \begin{itemize}
   \item po¹le øádek (2x) \textit{[konstantní èas]}
   \item pøijme øádek (2x) \textit{[konstantní èas]}
   \item zpracování první buòky (5-okolí) \textit{[promìnný èas]}
   \item zpracování poslední buòky (5-okolí) \textit{[promìnný èas]}
   \item zpracování zbylých bunìk (8-okolí)
   \begin{itemize}
    \item loop(M-2) zpracuj buòku \textit{[promìnný èas]}
   \end{itemize}
  \end{itemize}
 \item ulo¾ení nového øádku \textit{[konstantní èas]}
\end{itemize}
Rozbor celé aplikace je mo¾né vyjádøit pomocí následující odrá¾ek:
\begin{itemize}
 \item inicializace \textit{[konstantní èas]}
 \item naètení dat \textit{[promìnný èas]}
 \item pravidla hry \textit{[promìnný èas]}
 \item tisk jednotlivých øádkù po K-krocích \textit{[konstantní èas]}
 \item úklid \textit{[konstantní èas]}
\end{itemize}

Èástí oznaèené \textit{[promìnný èas]} jsou závislé na vstupních hodnotách, naopak èásti \textit{[konstantní èas]} nikoliv. Èas a cena algoritmu závisí na následujících promìnných:
\begin{itemize}
 \item poèet krokù
 \item poèet sloupcù hracího pole
 \item poèet øádkù hracího pole (ovlivòuje cenu)
\end{itemize}
\section{Slo¾itost algoritmu}
\begin{description}
 \item[èasová slo¾itost:] $2n + \log n - 1$ cyklù, kde $n$ je poèet prvkù k seøazení\\tedy \textbf{t($n$) = O($n$)}
 \item[cena:] $t(n).p(n) = O(n).(\log n + 1)$, kde $p(n)$ je poèet \czuv{procesorù}\\tedy \textbf{c($n$) = O($n*\log n$)}, co¾ je optimální
\end{description}

\section{Namìøené hodnoty}
V tabulce \ref{tab1} je zobrazena závislost mezi poètem vstupních prvkù a èasem potøebným k jejich seøazení. Výsledky byly zji¹tìny pøi experimentování s posloupnostmi rùzných délek. Pro ka¾dou hodnotu bylo provedeno 10 mìøení a následnì udìlán prùmìr. Mìøení probíhalo na ¹kolním serveru Merlin pomocí pøíkazu \textit{time} pøi vypnutých výpisech.Do výsledných hodnot není zapoèítáno generování vstupních prvkù pøíkazem \textit{dd}.
\begin{table}[ht]
\begin{center}
\begin{tabular}{ l | c c c c c c c c c c } 
%\rowcolor[gray]{0.9}
\hline
\textbf{poèet prvkù}	& 2      & 4      & 8      & 16    & 32    & 64    & 128   & 256   & 512   \\
\textbf{èas[s]}		& 0,066  & 0,105  & 0,145  & 0,171 & 0,176 & 0,186 & 0,205 & 0,324 & 0,386 \\ \hline
\end{tabular}

\end{center} 
\begin{center}
\begin{tabular}{ l | c c c c c c} 
\hline
\textbf{poèet prvkù}	& 1024  & 2048  & 4096  & 8192  & 16384 & 32768 \\
\textbf{èas[s]}		& 0,441 & 0,772 & 1,176 & 2,379 & 4,715 & 4,921 \\ \hline
\end{tabular}
\caption{Pøehled namìøených èasù v závislosti na poètu prvkù.}
\label{tab1}
\end{center} 
\end{table}

Na obrázku \ref{pic} je graficky znázornìn vztah mezi poètem prvkù a èasem potøebným k jejich seøazení.
% \begin{figure}[ht]
% \begin{center}
% \includegraphics[scale=.8]{1.pdf}
% \caption{Závislost mezi poètem prvkù a èasem potøebným k jejich seøazení.}
%  \label{pic1}
% \end{center}
% \end{figure}

\section{Komunikaèní protokol}
Na obrázku \ref{pic} zobrazeném ní¾e je pomocí sekvenèního diagramu znázornìna komunikace mezi jednotlivými procesory. Celkový poèet zasílaných zpráv se odvyjí od poètu krokù, které se v algoritmu provedou. To je znázornìné pomocí smyèky \textit{LOOP K}, kde \textit{K} je poèet krokù. Procesory od 2 a¾ po N-1 zasílají 2 zprávy a také 2 zprávy pøijímají. První a poslední procesor, jeliko¾ jsou krajní zasílají i pøijímají pouze zprávu jednu.

V oznaèení \czuv{posílá X. øádek} \textit{X} reprezentuje èíslo øádku ze zdrojového soubor (jak øádky tak i procesory jsou èíslovány od 1).
\begin{figure}[ht]
\small\begin{verbatim}
 +-------------+      +-------------+      +-------------+       +---------------+      +-------------+
 + 1. Procesor +      + 2. Procesor +      + 3. Procesor +  ...  + N-1. Procesor +      + N. Procesor +
 +-------------+      +-------------+      +-------------+       +---------------+      +-------------+
        |                    |                    |                     |                     |
+------------------------------------------------------------------------------------------------------+
| LOOP K |                   |                    |                     |                     |        |
+--------+                   |                    |                     |                     |        |
|       |   posílá 1.øádek   |   posílá 2.øádek   |         ...         |   posílá N-1.øádek  |        |
|       |------------------->|------------------->|-------------------->|-------------------->|        |
|       |   posílá 2.øádek   |   posílá 3.øádek   |         ...         |   posílá N.øádek    |        |
|       |<-------------------|<-------------------|<--------------------|<--------------------|        |
|       |                    |                    |                     |                     |        |
+------------------------------------------------------------------------------------------------------+
\end{verbatim}
\begin{figure}[ht]
\small\begin{verbatim}
 +-------------+      +-------------+      +-------------+       +---------------+      +-------------+
 + 1. a N. CPU +      + 2. Procesor +      + 3. Procesor +  ...  + N-1. Procesor +      + N. Procesor +
 +-------------+      +-------------+      +-------------+       +---------------+      +-------------+
        |                    |                    |                     |                     |
+------------------------------------------------------------------------------------------------------+
| LOOP K |                   |                    |                     |                     |        |
+--------+                   |                    |                     |                     |        |
|       |   posílá 1. nebo N.øádek   |   posílá 2.øádek   |         ...         |   posílá N-1.øádek  |        |
|       |------------------->|------------------->|-------------------->|-------------------->|        |
|       |   posílá 2.øádek   |   posílá 3.øádek   |         ...         |   posílá N.øádek    |        |
|       |<-------------------|<-------------------|<--------------------|<--------------------|        |
|       |                    |                    |                     |                     |        |
+------------------------------------------------------------------------------------------------------+
\end{verbatim}
\caption{Pøíklad komunikace N procesorù v paralelním celulárním automatu.}
\label{pic}
\end{figure}

\normalsize
\end{document}